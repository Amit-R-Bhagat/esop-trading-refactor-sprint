name: Pipeline

on:
  push:
    branches: 
      - deploy

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    outputs:
      output1: ${{ steps.get-ip.outputs.t }}
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v1

      - name: Terraform Formatting
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false

      - name: Terraform output
        id: get-ip
        run: |
        t=$(terraform output instance_public_ip | tr -d '"')
        echo t=$t >> $GITHUB_OUTPUT
      
      - name: echo host ip
        run: echo ${{ steps.get-ip.outputs.t }}
  
  deploy:
    needs: [terraform]
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17

      - name: echo host
        run: echo ${{ needs.terraform.outputs.output1 }}
         
      - name: Download built Jar artifact
        uses: actions/download-artifact@v3
        with:
          name: applicationJar
         
      - name: Copy built Jar to remote machine instance
        uses: appleboy/scp-action@master
        with:
          host: ${{ needs.terraform.outputs.output1 }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "esop-0.1-all.jar,start.sh"
          target: "/app/"
       
      - name: startup the application
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: /bin/bash /app/start.sh
       
         
        
